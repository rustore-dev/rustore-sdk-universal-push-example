plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'ru.rustore.universalpushexampleapp'
    compileSdk 33

    defaultConfig {
        applicationId "ru.rustore.universalpushexampleapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    def taskNames = gradle.startParameter.taskNames.toString()
    /**
     * fcm - часть имени Flavors
     */
    if (taskNames.containsIgnoreCase("fcm")){
        apply plugin: 'com.google.gms.google-services'
    }
    /**
     * hms - часть имени Flavors
     */
    if (taskNames.containsIgnoreCase("hms")){
        apply plugin:'com.huawei.agconnect'
    }

    flavorDimensions "push"
    productFlavors {
        fcmRustoreHms {
            dimension "push"
            println "Using fcmRustoreHms *-service.json"
            copy {
                from 'src/fcmRustoreHms/'
                include '*.json'
                into '.'
            }
        }
        fcmRustore {
            dimension "push"
            println "Using fcmRustore google-service.json"
            copy {
                from 'src/fcmRustore/'
                include '*.json'
                into '.'
            }
        }
        hmsRustore {
            dimension "push"
            println "Using hmsRustore agconnect-service.json"
            copy {
                from 'src/hmsRustore/'
                include '*.json'
                into '.'
            }
        }
    }

    // @todo: need for universalpush
    signingConfigs {
        def keystorePropertiesFile = rootProject.file("app/key.properties")
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    implementation 'ru.rustore.sdk:universalpush:0.1.1'
    implementation 'ru.rustore.sdk:universalrustore:0.1.1'

    def taskNames = gradle.startParameter.taskNames.toString()
    /**
     * hms - часть имени Flavors
     */
    if (taskNames.containsIgnoreCase("hms")) {
        implementation 'ru.rustore.sdk:universalhms:0.1.1'
    }
    /**
     * fcm - часть имени Flavors
     */
    if (taskNames.containsIgnoreCase("fcm")) {
        implementation 'ru.rustore.sdk:universalfcm:0.1.1'
    }

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material3:material3:1.0.1"
    implementation "androidx.compose.material3:material3-window-size-class:1.0.1"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}